{"version":3,"file":"countup.js-angular2.js","sources":["ng://countup.js-angular2/lib/count-up.directive.ts","ng://countup.js-angular2/lib/count-up.module.ts","ng://countup.js-angular2/public_api.ts","ng://countup.js-angular2/countup.js-angular2.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  HostListener,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  NgZone, Inject, PLATFORM_ID\n} from '@angular/core';\nimport { CountUp, CountUpOptions } from 'countup.js';\nimport {isPlatformBrowser} from '@angular/common';\n\n@Directive({\n  selector: '[countUp]'\n})\nexport class CountUpDirective implements OnChanges {\n\n  countUp: CountUp;\n  // the value you want to count to\n  @Input('countUp') endVal: number;\n  // previous end val enables us to count from last endVal\n  // when endVal is changed\n  previousEndVal: number;\n\n  @Input() options: CountUpOptions = {};\n  @Input() reanimateOnClick = true;\n  @Output() complete = new EventEmitter<void>();\n\n  // Re-animate if preference is set.\n  @HostListener('click')\n  onClick() {\n    if (this.reanimateOnClick) {\n      this.animate();\n    }\n  }\n\n  constructor(\n    private el: ElementRef,\n    private zone: NgZone,\n    @Inject(PLATFORM_ID) private platformId: Object,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    // don't animate server-side (universal)\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (changes.endVal && changes.endVal.currentValue !== undefined) {\n      if (this.previousEndVal !== undefined) {\n        this.options = {\n          ...this.options,\n          startVal: this.previousEndVal\n        };\n      }\n      this.countUp = new CountUp(this.el.nativeElement, this.endVal, this.options);\n      this.animate();\n      this.previousEndVal = this.endVal;\n    }\n  }\n\n  private animate() {\n    this.zone.runOutsideAngular(() => {\n      this.countUp.reset();\n      this.countUp.start(() => {\n        this.zone.run(() => {\n          this.complete.emit();\n        });\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CountUpDirective } from './count-up.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [CountUpDirective],\n  exports: [CountUpDirective]\n})\nexport class CountUpModule { }\n","/*\n * Public API Surface of count-up\n */\n\nexport * from './lib/count-up.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {CountUpDirective as Éµa} from './lib/count-up.directive';"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":";;;;;IAiBa,gBAAgB,GAA7B,MAAa,gBAAgB;IAqB3B,YACU,EAAc,EACd,IAAY,EACS,UAAkB;QAFvC,OAAE,GAAF,EAAE,CAAY;QACd,SAAI,GAAJ,IAAI,CAAQ;QACS,eAAU,GAAV,UAAU,CAAQ;QAfxC,YAAO,GAAmB,EAAE,CAAC;QAC7B,qBAAgB,GAAG,IAAI,CAAC;QACvB,aAAQ,GAAG,IAAI,YAAY,EAAQ,CAAC;KAc1C;;IAVJ,OAAO;QACL,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;KACF;IAQD,WAAW,CAAC,OAAsB;;QAEhC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACvC,OAAO;SACR;QACD,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,YAAY,KAAK,SAAS,EAAE;YAC/D,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;gBACrC,IAAI,CAAC,OAAO,qBACP,IAAI,CAAC,OAAO,IACf,QAAQ,EAAE,IAAI,CAAC,cAAc,GAC9B,CAAC;aACH;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7E,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;SACnC;KACF;IAEO,OAAO;QACb,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;gBACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACtB,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;CACF,CAAA;AAnDmBA;IAAjB,KAAK,CAAC,SAAS,CAAC;;gDAAgB;AAKxBA;IAAR,KAAK,EAAE;;iDAA8B;AAC7BA;IAAR,KAAK,EAAE;;0DAAyB;AACvBA;IAAT,MAAM,EAAE;;kDAAqC;AAI9CA;IADC,YAAY,CAAC,OAAO,CAAC;;;;+CAKrB;AAnBU,gBAAgB;IAH5B,SAAS,CAAC;QACT,QAAQ,EAAE,WAAW;KACtB,CAAC;IAyBGC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;qCAFR,UAAU;QACR,MAAM;QACqB,MAAM;GAxBtC,gBAAgB,CAuD5B;;IChEY,aAAa,GAA1B,MAAa,aAAa;CAAI,CAAA;AAAjB,aAAa;IALzB,QAAQ,CAAC;QACR,OAAO,EAAE,EAAE;QACX,YAAY,EAAE,CAAC,gBAAgB,CAAC;QAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;KAC5B,CAAC;GACW,aAAa,CAAI;;ACR9B;;GAEG;;ACFH;;GAEG;;;;"}