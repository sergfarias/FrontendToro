{"version":3,"file":"countup.js-angular2.js","sources":["ng:/countup.js-angular2/lib/count-up.directive.ts","ng:/countup.js-angular2/lib/count-up.module.ts","ng:/countup.js-angular2/public_api.ts","ng:/countup.js-angular2/countup.js-angular2.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  HostListener,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  NgZone, Inject, PLATFORM_ID\n} from '@angular/core';\nimport { CountUp, CountUpOptions } from 'countup.js';\nimport {isPlatformBrowser} from '@angular/common';\n\n@Directive({\n  selector: '[countUp]'\n})\nexport class CountUpDirective implements OnChanges {\n\n  countUp: CountUp;\n  // the value you want to count to\n  @Input('countUp') endVal: number;\n  // previous end val enables us to count from last endVal\n  // when endVal is changed\n  previousEndVal: number;\n\n  @Input() options: CountUpOptions = {};\n  @Input() reanimateOnClick = true;\n  @Output() complete = new EventEmitter<void>();\n\n  // Re-animate if preference is set.\n  @HostListener('click')\n  onClick() {\n    if (this.reanimateOnClick) {\n      this.animate();\n    }\n  }\n\n  constructor(\n    private el: ElementRef,\n    private zone: NgZone,\n    @Inject(PLATFORM_ID) private platformId: Object,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    // don't animate server-side (universal)\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (changes.endVal && changes.endVal.currentValue !== undefined) {\n      if (this.previousEndVal !== undefined) {\n        this.options = {\n          ...this.options,\n          startVal: this.previousEndVal\n        };\n      }\n      this.countUp = new CountUp(this.el.nativeElement, this.endVal, this.options);\n      this.animate();\n      this.previousEndVal = this.endVal;\n    }\n  }\n\n  private animate() {\n    this.zone.runOutsideAngular(() => {\n      this.countUp.reset();\n      this.countUp.start(() => {\n        this.zone.run(() => {\n          this.complete.emit();\n        });\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CountUpDirective } from './count-up.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [CountUpDirective],\n  exports: [CountUpDirective]\n})\nexport class CountUpModule { }\n","/*\n * Public API Surface of count-up\n */\n\nexport * from './lib/count-up.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {CountUpDirective as Éµa} from './lib/count-up.directive';"]}