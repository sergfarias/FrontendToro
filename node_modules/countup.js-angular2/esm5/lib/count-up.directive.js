import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input, Output, HostListener, EventEmitter, NgZone, Inject, PLATFORM_ID } from '@angular/core';
import { CountUp } from 'countup.js';
import { isPlatformBrowser } from '@angular/common';
var CountUpDirective = /** @class */ (function () {
    function CountUpDirective(el, zone, platformId) {
        this.el = el;
        this.zone = zone;
        this.platformId = platformId;
        this.options = {};
        this.reanimateOnClick = true;
        this.complete = new EventEmitter();
    }
    // Re-animate if preference is set.
    CountUpDirective.prototype.onClick = function () {
        if (this.reanimateOnClick) {
            this.animate();
        }
    };
    CountUpDirective.prototype.ngOnChanges = function (changes) {
        // don't animate server-side (universal)
        if (!isPlatformBrowser(this.platformId)) {
            return;
        }
        if (changes.endVal && changes.endVal.currentValue !== undefined) {
            if (this.previousEndVal !== undefined) {
                this.options = tslib_1.__assign({}, this.options, { startVal: this.previousEndVal });
            }
            this.countUp = new CountUp(this.el.nativeElement, this.endVal, this.options);
            this.animate();
            this.previousEndVal = this.endVal;
        }
    };
    CountUpDirective.prototype.animate = function () {
        var _this = this;
        this.zone.runOutsideAngular(function () {
            _this.countUp.reset();
            _this.countUp.start(function () {
                _this.zone.run(function () {
                    _this.complete.emit();
                });
            });
        });
    };
    tslib_1.__decorate([
        Input('countUp'),
        tslib_1.__metadata("design:type", Number)
    ], CountUpDirective.prototype, "endVal", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], CountUpDirective.prototype, "options", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], CountUpDirective.prototype, "reanimateOnClick", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], CountUpDirective.prototype, "complete", void 0);
    tslib_1.__decorate([
        HostListener('click'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], CountUpDirective.prototype, "onClick", null);
    CountUpDirective = tslib_1.__decorate([
        Directive({
            selector: '[countUp]'
        }),
        tslib_1.__param(2, Inject(PLATFORM_ID)),
        tslib_1.__metadata("design:paramtypes", [ElementRef,
            NgZone,
            Object])
    ], CountUpDirective);
    return CountUpDirective;
}());
export { CountUpDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291bnQtdXAuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vY291bnR1cC5qcy1hbmd1bGFyMi8iLCJzb3VyY2VzIjpbImxpYi9jb3VudC11cC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLEtBQUssRUFDTCxNQUFNLEVBQ04sWUFBWSxFQUNaLFlBQVksRUFHWixNQUFNLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFDNUIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLE9BQU8sRUFBa0IsTUFBTSxZQUFZLENBQUM7QUFDckQsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFLbEQ7SUFxQkUsMEJBQ1UsRUFBYyxFQUNkLElBQVksRUFDUyxVQUFrQjtRQUZ2QyxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBQ2QsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUNTLGVBQVUsR0FBVixVQUFVLENBQVE7UUFmeEMsWUFBTyxHQUFtQixFQUFFLENBQUM7UUFDN0IscUJBQWdCLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO0lBYzNDLENBQUM7SUFaSixtQ0FBbUM7SUFFbkMsa0NBQU8sR0FBUDtRQUNFLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ3pCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNoQjtJQUNILENBQUM7SUFRRCxzQ0FBVyxHQUFYLFVBQVksT0FBc0I7UUFDaEMsd0NBQXdDO1FBQ3hDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDdkMsT0FBTztTQUNSO1FBQ0QsSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsWUFBWSxLQUFLLFNBQVMsRUFBRTtZQUMvRCxJQUFJLElBQUksQ0FBQyxjQUFjLEtBQUssU0FBUyxFQUFFO2dCQUNyQyxJQUFJLENBQUMsT0FBTyx3QkFDUCxJQUFJLENBQUMsT0FBTyxJQUNmLFFBQVEsRUFBRSxJQUFJLENBQUMsY0FBYyxHQUM5QixDQUFDO2FBQ0g7WUFDRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzdFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNmLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztTQUNuQztJQUNILENBQUM7SUFFTyxrQ0FBTyxHQUFmO1FBQUEsaUJBU0M7UUFSQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1lBQzFCLEtBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDckIsS0FBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7Z0JBQ2pCLEtBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO29CQUNaLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQ3ZCLENBQUMsQ0FBQyxDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFsRGlCO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7O29EQUFnQjtJQUt4QjtRQUFSLEtBQUssRUFBRTs7cURBQThCO0lBQzdCO1FBQVIsS0FBSyxFQUFFOzs4REFBeUI7SUFDdkI7UUFBVCxNQUFNLEVBQUU7O3NEQUFxQztJQUk5QztRQURDLFlBQVksQ0FBQyxPQUFPLENBQUM7Ozs7bURBS3JCO0lBbkJVLGdCQUFnQjtRQUg1QixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsV0FBVztTQUN0QixDQUFDO1FBeUJHLG1CQUFBLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQTtpREFGUixVQUFVO1lBQ1IsTUFBTTtZQUNxQixNQUFNO09BeEJ0QyxnQkFBZ0IsQ0F1RDVCO0lBQUQsdUJBQUM7Q0FBQSxBQXZERCxJQXVEQztTQXZEWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIEhvc3RMaXN0ZW5lcixcbiAgRXZlbnRFbWl0dGVyLFxuICBPbkNoYW5nZXMsXG4gIFNpbXBsZUNoYW5nZXMsXG4gIE5nWm9uZSwgSW5qZWN0LCBQTEFURk9STV9JRFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvdW50VXAsIENvdW50VXBPcHRpb25zIH0gZnJvbSAnY291bnR1cC5qcyc7XG5pbXBvcnQge2lzUGxhdGZvcm1Ccm93c2VyfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbY291bnRVcF0nXG59KVxuZXhwb3J0IGNsYXNzIENvdW50VXBEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuXG4gIGNvdW50VXA6IENvdW50VXA7XG4gIC8vIHRoZSB2YWx1ZSB5b3Ugd2FudCB0byBjb3VudCB0b1xuICBASW5wdXQoJ2NvdW50VXAnKSBlbmRWYWw6IG51bWJlcjtcbiAgLy8gcHJldmlvdXMgZW5kIHZhbCBlbmFibGVzIHVzIHRvIGNvdW50IGZyb20gbGFzdCBlbmRWYWxcbiAgLy8gd2hlbiBlbmRWYWwgaXMgY2hhbmdlZFxuICBwcmV2aW91c0VuZFZhbDogbnVtYmVyO1xuXG4gIEBJbnB1dCgpIG9wdGlvbnM6IENvdW50VXBPcHRpb25zID0ge307XG4gIEBJbnB1dCgpIHJlYW5pbWF0ZU9uQ2xpY2sgPSB0cnVlO1xuICBAT3V0cHV0KCkgY29tcGxldGUgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgLy8gUmUtYW5pbWF0ZSBpZiBwcmVmZXJlbmNlIGlzIHNldC5cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICBvbkNsaWNrKCkge1xuICAgIGlmICh0aGlzLnJlYW5pbWF0ZU9uQ2xpY2spIHtcbiAgICAgIHRoaXMuYW5pbWF0ZSgpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsXG4gICAgcHJpdmF0ZSB6b25lOiBOZ1pvbmUsXG4gICAgQEluamVjdChQTEFURk9STV9JRCkgcHJpdmF0ZSBwbGF0Zm9ybUlkOiBPYmplY3QsXG4gICkge31cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgLy8gZG9uJ3QgYW5pbWF0ZSBzZXJ2ZXItc2lkZSAodW5pdmVyc2FsKVxuICAgIGlmICghaXNQbGF0Zm9ybUJyb3dzZXIodGhpcy5wbGF0Zm9ybUlkKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlcy5lbmRWYWwgJiYgY2hhbmdlcy5lbmRWYWwuY3VycmVudFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGlmICh0aGlzLnByZXZpb3VzRW5kVmFsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0ge1xuICAgICAgICAgIC4uLnRoaXMub3B0aW9ucyxcbiAgICAgICAgICBzdGFydFZhbDogdGhpcy5wcmV2aW91c0VuZFZhbFxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgdGhpcy5jb3VudFVwID0gbmV3IENvdW50VXAodGhpcy5lbC5uYXRpdmVFbGVtZW50LCB0aGlzLmVuZFZhbCwgdGhpcy5vcHRpb25zKTtcbiAgICAgIHRoaXMuYW5pbWF0ZSgpO1xuICAgICAgdGhpcy5wcmV2aW91c0VuZFZhbCA9IHRoaXMuZW5kVmFsO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYW5pbWF0ZSgpIHtcbiAgICB0aGlzLnpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgdGhpcy5jb3VudFVwLnJlc2V0KCk7XG4gICAgICB0aGlzLmNvdW50VXAuc3RhcnQoKCkgPT4ge1xuICAgICAgICB0aGlzLnpvbmUucnVuKCgpID0+IHtcbiAgICAgICAgICB0aGlzLmNvbXBsZXRlLmVtaXQoKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuIl19